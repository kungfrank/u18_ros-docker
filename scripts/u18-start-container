#!/bin/bash

BASH_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Check/Create .xauth file
XAUTH=/tmp/.u18_docker.xauth
if [ ! -f $XAUTH ]
then
    xauth_list=$(xauth nlist $DISPLAY)
    xauth_list=$(sed -e 's/^..../ffff/' <<< "$xauth_list")
    if [ ! -z "$xauth_list" ]
    then
        echo "$xauth_list" | xauth -f $XAUTH nmerge -
    else
        touch $XAUTH
    fi
    chmod a+r $XAUTH
fi

# Prevent executing "docker run" when xauth failed.
if [ ! -f $XAUTH ]; then
    echo "[$XAUTH] was not properly created. Exiting..."
    exit 1
    else
    echo "[$XAUTH] was properly created. Continue..."
fi

# Docker run
sudo docker run -itd \
    -e DISPLAY=$DISPLAY \
    -e QT_X11_NO_MITSHM=1 \
    -e XAUTHORITY=$XAUTH \
    -v "$XAUTH:$XAUTH" \
    -v "/tmp/.X11-unix:/tmp/.X11-unix" \
    --net host \
    -v /dev:/dev \
    -v /:/hostroot \
    --name $CONTAINER_NAME \
    --privileged \
    $IMAGE_NAME

# container_id=$(docker ps -aqf "ancestor=${IMAGE_NAME}")
# echo "container_id: [$container_id]"

# if [ ! -z $container_id ]; then
#     docker start $container_id
#     docker rename $container_id $CONTAINER_NAME
# else
#     sudo docker run -itd \
#         -e DISPLAY=$DISPLAY \
#         -e QT_X11_NO_MITSHM=1 \
#         -e XAUTHORITY=$XAUTH \
#         -v "$XAUTH:$XAUTH" \
#         -v "/tmp/.X11-unix:/tmp/.X11-unix" \
#         --net host \
#         -v /dev:/dev \
#         -v /:/hostroot \
#         --name $CONTAINER_NAME \
#         --privileged \
#         $IMAGE_NAME
# fi
